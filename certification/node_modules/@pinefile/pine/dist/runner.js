"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRunner = exports.getRunner = void 0;
const utils_1 = require("@pinefile/utils");
const isValidRunnerObject = (runner) => (0, utils_1.isObject)(runner) &&
    (typeof runner.default === 'function' || typeof runner.runner === 'function');
const getRunner = (config) => {
    let runner = false;
    let options = {};
    let rest = {};
    if (typeof config.runner === 'function') {
        runner = config.runner;
    }
    else if (isValidRunnerObject(config.runner)) {
        runner = config.runner;
    }
    else if (typeof config.runner === 'string') {
        try {
            runner = require(config.runner);
        }
        catch (err) {
            err.message = `Failed to load runner ${err.message}`;
            throw err;
        }
    }
    else if (Array.isArray(config.runner) &&
        config.runner.length >= 1 &&
        !Array.isArray(config.runner[0])) {
        runner = (0, exports.getRunner)({ runner: config.runner[0] }).runner;
        options = (0, utils_1.isObject)(config.runner[1]) ? config.runner[1] : {};
    }
    if (isValidRunnerObject(runner)) {
        rest = runner;
        if (runner.runner) {
            rest = (0, utils_1.omit)('runner', rest);
            runner = runner.runner;
        }
        else {
            rest = (0, utils_1.omit)('default', rest);
            runner = runner.default;
        }
    }
    if (runner !== false && typeof runner !== 'function') {
        throw new Error(`Expected runner function to be a function, got ${runner === null ? 'null' : typeof runner}`);
    }
    return { runner, options, ...rest };
};
exports.getRunner = getRunner;
const createRunner = (fn) => async (pinefile, name, args, options) => async () => await fn(pinefile, name, args, options);
exports.createRunner = createRunner;
